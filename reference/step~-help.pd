#N canvas 0 0 634 373 10;
#X obj 243 283 step~;
#X obj 243 309 print~;
#X msg 186 236 bang;
#X floatatom 283 259 0 0 0 0 - - -;
#X floatatom 243 237 0 0 0 0 - - -;
#X obj 186 259 t b b;
#X obj 243 259 t f b;
#X text 50 20 step~ ::;
#X text 50 70 IN1 :;
#X text 50 110 IN2 :;
#X text 50 180 note :;
#X text 100 20 produces a unit:step:sequence or a rectangle:window
;
#X text 100 70 define \, how many samples after the float::bang:message
the rectangle:window will start;
#X text 100 110 define the length of the rectangle:window choosing
1 will produce a dirac:impulse :: unit:sample:sequence) choosing 0
will make the rectangle infinitely long :: unit:step:sequence;
#X text 100 180 1 sample equals 1:over:samplerate secs;
#X text 235 217 position;
#X text 303 239 length;
#N canvas 169 79 820 553 application 0;
#X obj 88 188 sig~ 440;
#X obj 88 211 osc~;
#X obj 88 235 *~;
#X obj 149 211 osc~;
#X obj 149 235 *~;
#X obj 149 188 sig~ 550;
#X floatatom 88 163 0 0 0 0 - - -;
#X floatatom 149 163 0 0 0 0 - - -;
#X obj 276 189 sig~ -1;
#X obj 228 189 step~;
#X msg 258 166 0;
#X msg 291 166 44100;
#X floatatom 338 166 0 0 0 0 - - -;
#X msg 228 142 bang;
#X text 193 118 toggle::press;
#X text 38 23 This \, of course \, is a quite barbarious use of the
step~-object;
#X text 124 51 but it was fast to do and I do think it illustrates
the way it works.;
#X floatatom 178 342 0 0 0 0 - - -;
#N canvas 159 26 495 266 output 0;
#X obj 338 160 t b;
#X obj 338 110 f;
#X obj 338 60 inlet;
#X text 344 29 mute;
#X obj 338 185 f;
#X msg 425 178 0;
#X msg 338 85 bang;
#X obj 338 135 moses 1;
#X obj 425 153 t b f;
#X obj 397 117 moses 1;
#X obj 83 148 dbtorms;
#X obj 22 181 inlet~;
#X obj 199 41 inlet;
#X text 199 18 level;
#X msg 96 65 set \$1;
#X obj 96 89 outlet;
#X msg 214 64 \; pd dsp 1;
#X obj 83 194 line~;
#X obj 22 212 *~;
#X obj 22 241 dac~;
#X obj 83 171 pack 0 50;
#X text 20 158 audio;
#X text 93 110 show level;
#X obj 83 42 r \$0master-lvl;
#X obj 199 100 s \$0master-lvl;
#X obj 397 92 r \$0master-lvl;
#X obj 338 210 s \$0master-lvl;
#X connect 0 0 4 0;
#X connect 1 0 7 0;
#X connect 2 0 6 0;
#X connect 4 0 26 0;
#X connect 5 0 26 0;
#X connect 6 0 1 0;
#X connect 7 0 0 0;
#X connect 7 1 8 0;
#X connect 8 0 5 0;
#X connect 9 1 4 1;
#X connect 10 0 20 0;
#X connect 11 0 18 0;
#X connect 12 0 16 0;
#X connect 12 0 24 0;
#X connect 14 0 15 0;
#X connect 17 0 18 1;
#X connect 18 0 19 0;
#X connect 18 0 19 1;
#X connect 20 0 17 0;
#X connect 23 0 10 0;
#X connect 23 0 14 0;
#X connect 25 0 1 1;
#X connect 25 0 9 0;
#X restore 149 370 pd output;
#X msg 207 342 MUTE;
#X text 173 323 output amplitude;
#X obj 149 290 +~;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 21 0;
#X connect 3 0 4 0;
#X connect 4 0 21 0;
#X connect 5 0 3 0;
#X connect 6 0 0 0;
#X connect 7 0 5 0;
#X connect 8 0 4 1;
#X connect 9 0 2 1;
#X connect 9 0 4 1;
#X connect 10 0 9 1;
#X connect 11 0 9 1;
#X connect 12 0 9 1;
#X connect 13 0 9 0;
#X connect 17 0 18 1;
#X connect 18 0 17 0;
#X connect 19 0 18 2;
#X connect 21 0 18 0;
#X restore 439 186 page application;
#X msg 186 283 1;
#X connect 0 0 1 0;
#X connect 2 0 5 0;
#X connect 3 0 0 1;
#X connect 4 0 6 0;
#X connect 5 0 0 0;
#X connect 5 1 18 0;
#X connect 6 0 0 0;
#X connect 6 1 1 0;
#X connect 18 0 1 0;
